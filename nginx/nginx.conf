# Описываем группу серверов для backend'а
upstream backend { 
  # web - dns имя сервера в сети Docker, 8000 - порт, на котором работает сервер
  server web:8000; 
}

# Описываем группу серверов для backend'а
upstream frontend { 
  # web - dns имя сервера в сети Docker, 8000 - порт, на котором работает сервер
  server frontend:80; 
}

# блок настройки Nginx сервера
server {
  # Указываем с каких адресов/портов принимать запросы  
  listen 80;
  listen [::]:80;
  # Ограничиваем максимальный размер пользовательского запроса
  client_max_body_size 2M;

  # Задаем правило по обработке запросов, начинающихся с /static/
  location /static/ {
      # Возвращаем статические файлы из /lab/static_files/ 
      alias /lab/static_files/;
  }
  # Задаем правило по обработке запросов, начинающихся с /media/
  location /media/ {
      # Возвращаем статические файлы из /lab/media/ 
      alias /lab/media/;
  }

  # Задаем правило по обработке запросов, начинающихся с /api/
  location /api/ {
    # Проксируем запрос на наш backend
    proxy_pass http://backend;
    # Добавляем заголовки с вспомогательной информацией к нашему запросу
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $remote_addr; 
    proxy_set_header Host $host;
    proxy_redirect off;
  }
  # Задаем правило по обработке запросов, начинающихся с /admin/
  location /admin/ {
    proxy_pass http://backend;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $remote_addr; 
    proxy_set_header Host $host;
    proxy_redirect off;
  }
  
  location / {
    proxy_pass http://frontend;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $remote_addr; 
    proxy_set_header Host $host;
    proxy_redirect off;
  }
}